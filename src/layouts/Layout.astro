---
import Header from "@components/Header.astro";
import Hero from "@components/Hero.astro";
import "../styles/tailwindBase.css";
export interface Props {
  title: string;
}

const { title } = Astro.props;
const disableTracking = import.meta.env.DEV;
const openGraphImage = "https://boxtimer.app/images/og.png";
const url = "https://boxtimer.app/";
const description =
  "The Box Timer is a free and simple workout timer app for your iPhone. It's perfect for workouts at home, outside or at your box. It supports any WOD such as AMRAP, EMOM or Tabata.";
---

<!doctype html>
<html lang="en" data-theme="boxtimer">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <meta name="copyright" content="© Copyright 2020 to Present" />
    <meta name="author" content="Edvin Lindén" />
    <meta property="og:url" content={url} />
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={openGraphImage} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content="boxtimer.app" />
    <meta property="twitter:url" content={url} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={openGraphImage} />
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "SoftwareApplication",
        "name": "Box Timer - Workout Timer",
        "operatingSystem": "IOS",
        "applicationCategory": "HealthApplication",
        "aggregateRating": {
          "@type": "AggregateRating",
          "ratingValue": "4.8",
          "ratingCount": "1828"
        },
        "offers": {
          "@type": "Offer",
          "price": "0",
          "priceCurrency": "USD"
        }
      }
    </script>
    <title>{title}</title>
  </head>
  <body>
    <Header />
    <div class="mt-[75px] w-full overflow-x-hidden overlay-y-overlay">
      <Hero />
      <slot />
    </div>
    {
      disableTracking ? null : (
        <script
          src="https://cdn.usefathom.com/script.js"
          data-site="RFZSCRLZ"
          defer
        />
      )
    }
    <script defer>
      const getAppButtonHero = document.getElementById("get-app-button-hero");
      const getAppButtonHeader = document.getElementById(
        "get-app-button-header"
      );
      const headerNavigation = document.getElementById("header-navigation");
      const getAppButtonCallback = (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            getAppButtonHeader.classList.remove("opacity-100");
            headerNavigation.classList.remove("translate-x-[-200px]");
          } else {
            getAppButtonHeader.classList.add("opacity-100");
            headerNavigation.classList.add("translate-x-[-200px]");
          }
        });
      };

      const getAppButtonObserver = new IntersectionObserver(
        getAppButtonCallback
      );
      getAppButtonObserver.observe(getAppButtonHero);

      const ratingStars = document.querySelectorAll(".ratingStar");

      const ratingStarsCallback = (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("opacity-100");
            entry.target.classList.remove("translate-y-8");
          }
        });
      };

      const ratingStarObserver = new IntersectionObserver(ratingStarsCallback);
      ratingStars.forEach((ratingStar) =>
        ratingStarObserver.observe(ratingStar)
      );
    </script>
  </body>
</html>
